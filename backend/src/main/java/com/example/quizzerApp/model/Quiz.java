package com.example.quizzerApp.model;

import com.example.quizzerApp.model.review.Review;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import jakarta.persistence.*;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

/**
 * Entity representing a quiz in the application.
 * Contains basic quiz metadata and can have multiple questions.
 */
@Entity
public class Quiz {

    /**
     * Unique identifier for the quiz.
     * Automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The name of the quiz.
     */
    private String name;

    /**
     * A detailed description of the quiz.
     */
    private String description;

    /**
     * The course code associated with the quiz (e.g., "CS101").
     */
    private String courseCode;

    /**
     * Indicates whether the quiz is published and available to users.
     */
    private boolean published;

    /**
     * The date and time when the quiz was created.
     * Formatted in JSON as "yyyy-MM-dd HH:mm:ss".
     */
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    private LocalDateTime dateAdded = LocalDateTime.now();

    /**
     * The category this quiz belongs to.
     * Many-to-one relationship with Category entity.
     */
    @ManyToOne
    @JoinColumn(name = "category_id")
    @JsonIgnoreProperties("quizzes")
    private Category category;

    /**
     * The reviews associated with this quiz.
     * One-to-many relationship with Review entity.
     */
    @OneToMany(mappedBy = "quiz", cascade = CascadeType.ALL, orphanRemoval = true)
    @JsonIgnoreProperties("quiz")
    private Set<Review> reviews = new HashSet<>();

    /**
     * Default constructor.
     * Initializes dateAdded to the current date and time to prevent null values.
     */
    public Quiz() {
        this.dateAdded = LocalDateTime.now();
    }

    /**
     * Retrieves the ID of the quiz.
     *
     * @return The quiz ID
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the ID of the quiz.
     *
     * @param id The quiz ID to set
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Retrieves the name of the quiz.
     *
     * @return The quiz name
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the name of the quiz.
     *
     * @param name The quiz name to set
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Retrieves the description of the quiz.
     *
     * @return The quiz description
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the description of the quiz.
     *
     * @param description The quiz description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Retrieves the course code associated with the quiz.
     *
     * @return The course code
     */
    public String getCourseCode() {
        return courseCode;
    }

    /**
     * Sets the course code associated with the quiz.
     *
     * @param courseCode The course code to set
     */
    public void setCourseCode(String courseCode) {
        this.courseCode = courseCode;
    }

    /**
     * Checks if the quiz is published.
     *
     * @return true if the quiz is published, false otherwise
     */
    public boolean isPublished() {
        return published;
    }

    /**
     * Sets the published status of the quiz.
     *
     * @param published The published status to set
     */
    public void setPublished(boolean published) {
        this.published = published;
    }

    /**
     * Retrieves the date and time when the quiz was created.
     *
     * @return The creation date and time
     */
    public LocalDateTime getDateAdded() {
        return dateAdded;
    }

    /**
     * Sets the date and time when the quiz was created.
     *
     * @param dateAdded The creation date and time to set
     */
    public void setDateAdded(LocalDateTime dateAdded) {
        this.dateAdded = dateAdded;
    }

    /**
     * Retrieves the category that this quiz belongs to.
     *
     * @return The category
     */
    public Category getCategory() {
        return category;
    }

    /**
     * Sets the category that this quiz belongs to.
     *
     * @param category The category to set
     */
    public void setCategory(Category category) {
        this.category = category;
    }

    /**
     * Retrieves the reviews associated with this quiz.
     *
     * @return The set of reviews
     */
    public Set<Review> getReviews() {
        return reviews;
    }

    /**
     * Sets the reviews associated with this quiz.
     *
     * @param reviews The set of reviews to set
     */
    public void setReviews(Set<Review> reviews) {
        this.reviews = reviews;
    }

    /**
     * Adds a review to this quiz.
     * Also sets the quiz reference in the review.
     *
     * @param review The review to add
     */
    public void addReview(Review review) {
        if (review != null) {
            reviews.add(review);
            review.setQuiz(this);
        }
    }

    /**
     * Removes a review from this quiz.
     * Also removes the quiz reference from the review.
     *
     * @param review The review to remove
     */
    public void removeReview(Review review) {
        if (review != null) {
            reviews.remove(review);
            review.setQuiz(null);
        }
    }
}
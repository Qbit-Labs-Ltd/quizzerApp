package com.example.quizzerApp.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import jakarta.persistence.*;
import java.time.LocalDateTime;

/**
 * Entity representing a student's answer to a quiz question.
 * Stores the selected answer option, timestamp, and correctness.
 */
@Entity
public class Answer {

    /**
     * Unique identifier for the answer.
     * Automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The user ID of the student who provided this answer.
     * This could be expanded to a User entity in a future update.
     */
    private String userId;

    /**
     * The question this answer is for.
     * Many-to-one relationship with Question entity.
     */
    @ManyToOne
    @JoinColumn(name = "question_id")
    @JsonIgnoreProperties("answers")
    private Question question;

    /**
     * The selected answer option.
     * Many-to-one relationship with AnswerOption entity.
     */
    @ManyToOne
    @JoinColumn(name = "answer_option_id")
    @JsonIgnoreProperties("answers")
    private AnswerOption selectedOption;

    /**
     * Indicates whether this answer is correct.
     * Determined by comparing the selected option with the question's correct
     * answer.
     */
    private boolean correct;

    /**
     * The date and time when this answer was submitted.
     */
    private LocalDateTime submittedAt;

    /**
     * Default constructor required by JPA.
     */
    public Answer() {
        this.submittedAt = LocalDateTime.now();
    }

    /**
     * Constructor with required fields.
     *
     * @param userId         The ID of the user who submitted the answer
     * @param question       The question being answered
     * @param selectedOption The selected answer option
     */
    public Answer(String userId, Question question, AnswerOption selectedOption) {
        this.userId = userId;
        this.question = question;
        this.selectedOption = selectedOption;
        this.correct = selectedOption.isCorrect();
        this.submittedAt = LocalDateTime.now();
    }

    // Getters and Setters

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getUserId() {
        return userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    public Question getQuestion() {
        return question;
    }

    public void setQuestion(Question question) {
        this.question = question;
    }

    public AnswerOption getSelectedOption() {
        return selectedOption;
    }

    public void setSelectedOption(AnswerOption selectedOption) {
        this.selectedOption = selectedOption;
        // Update correctness based on the selected option
        this.correct = selectedOption.isCorrect();
    }

    public boolean isCorrect() {
        return correct;
    }

    public void setCorrect(boolean correct) {
        this.correct = correct;
    }

    public LocalDateTime getSubmittedAt() {
        return submittedAt;
    }

    public void setSubmittedAt(LocalDateTime submittedAt) {
        this.submittedAt = submittedAt;
    }
}
